apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin:'kotlin-kapt'                       // 启用 kapt

configurations.all {
    resolutionStrategy {
        force 'org.jetbrains:annotations:17.0.0' // Use the version you need
        force 'com.google.guava:guava:30.1-android' // 使用较新的 Guava 版本
    }

    exclude group: 'org.jetbrains', module: 'annotations-java5'
    exclude group: 'com.google.guava', module: 'listenablefuture'
}

buildscript {
    ext.kotlin_version = '1.8.20'

    repositories {
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }

        google()  // 确保 Google 仓库在最后（避免镜像失效时回退）
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.0'

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
     }
}

repositories {
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }

    google()  // 确保 Google 仓库在最后（避免镜像失效时回退）
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.core:core:1.10.1'

    //implementation 'org.jetbrains:annotations-java5:17.0.0'

    // 改为AndroidX版本：
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'

    // read and write inifile
    implementation 'org.ini4j:ini4j:0.5.4'

    // powermenu
    // implementation "com.github.skydoves:powermenu:2.2.4"

    // PDF
    implementation 'com.github.barteksc:pdfium-android:1.9.0'

    // Markwon
    implementation 'io.noties.markwon:core:4.6.2'
    implementation 'io.noties.markwon:ext-strikethrough:4.6.2'
    implementation 'io.noties.markwon:ext-tables:4.6.2'
    implementation 'io.noties.markwon:ext-tasklist:4.6.2'
    implementation "io.noties.markwon:ext-latex:4.6.2"
    implementation 'io.noties.markwon:html:4.6.2'
    implementation 'io.noties.markwon:image:4.6.2'
    implementation 'io.noties.markwon:linkify:4.6.2'
    implementation 'io.noties.markwon:simple-ext:4.6.2'
    implementation 'io.noties.markwon:image-glide:4.6.2'
    implementation 'io.noties.markwon:editor:4.6.2'
    implementation 'io.noties.markwon:syntax-highlight:4.6.2'

    // Prism4j 语法高亮引擎
    implementation "io.noties:prism4j:2.0.0"
    kapt "io.noties:prism4j-bundler:2.0.0"  // 关键：使用 kapt 处理注解
    //annotationProcessor "io.noties:prism4j-bundler:2.0.0" // 确保使用 annotationProcessor

}


android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qtAndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    namespace 'com.x'

    // 启用增量编译选项
    compileOptions {
      incremental true
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
    }


    useLibrary 'org.apache.http.legacy'

    //qt6.7
    //buildToolsVersion androidBuildToolsVersion
    //ndkVersion androidNdkVersion

    compileSdkVersion androidCompileSdkVersion.toInteger()

    // Extract native libraries from the APK
    // packagingOptions.jniLibs.useLegacyPackaging true

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            resources.srcDirs = ['resources']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
       }
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
    }

    lintOptions {
        abortOnError false
    }

    // Do not compress Qt binary resources file
    aaptOptions {
        noCompress 'rcc'
    }

    defaultConfig {
        resConfig "en"
        minSdkVersion qtMinSdkVersion
        targetSdkVersion qtTargetSdkVersion

        //qt6.7
        //ndk.abiFilters = qtTargetAbiList.split(",")
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildTypes {
        release {
          ndk{

                // abiFilters "arm64-v8a" , "x86_64"
                abiFilters "arm64-v8a"
            }
        }

    }

    // 显示所有已过时的警告详细信息
    /*allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    }*/
}

