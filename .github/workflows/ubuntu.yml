name: Linux

# Qt官方没有linux平台的x86包
on:
  push:
    branches: [main]
    paths:
      - '**'
      - '!stats.txt'  # 排除根目录下的 stats.txt
      - '!README.md'

  pull_request:
    paths:
      - '**'

  release:
    types: [published] # 监听发布事件

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    # 添加权限声明
    permissions:
          contents: write

    strategy:
      matrix:
        #os: [ubuntu-18.04,ubuntu-20.04]
        # qt_ver: [5.9.9,5.12.10,5.15.2]
        
        os: [ubuntu-22.04]
        qt_ver: [6.6.3]
        
        qt_arch: [gcc_64]
        
    env:
        targetName: Knot
        VERSION: Linux
        orgName: Knot
        ONEDRIVE_SECRET: ${{ secrets.ONEDRIVE_SECRET }}

        QT_VERSION: 6.6.3
        QT_ARCH: gcc_64
        QT_INSTALL_DIR: /opt/qt/QT_VERSION/gcc_64
        QT_INSTALL_QML: /opt/qt/QT_VERSION/gcc_64/qml
        QML2_IMPORT_PATH: ${{ github.workspace }}/qml:/opt/qt/QT_VERSION/gcc_64/qml
      
    steps:
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_ver }}
          #host: linux
          cached: 'false'
          # qtwebengine
          modules: qtcharts qtsensors qtwebview qtlocation qtwebchannel qt5compat qtpositioning
      
      - name: ubuntu install GL library
        run: |
         sudo apt-get install -y libglew-dev libglfw3-dev libxcb*
         
         sudo apt-get install libxkbcommon-dev
         
         sudo add-apt-repository universe
         sudo apt install libfuse2
         sudo apt-get install libsecret-1-dev

         sudo apt-get install -y libqt6serialport6


      - uses: actions/checkout@v2
        with:
                  fetch-depth: 1
                  
      - name: build ubuntu
        run: |
                  qmake
                  make


      - name: install linuxdeployqt 
        run: |
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage

      - name: Remove unused SQL drivers (SAFE MODE)
        run: |
            # 确保 qmake 可用
            export PATH="${{ env.QT_DIR }}/bin:$PATH"

            # 获取插件目录
            QT_PLUGINS_DIR=$(qmake -query QT_INSTALL_PLUGINS)

            # 创建备份目录（以防万一）
            mkdir -p /tmp/qt-drivers-backup
            cp "$QT_PLUGINS_DIR/sqldrivers/"* /tmp/qt-drivers-backup/
            echo "已备份驱动到: /tmp/qt-drivers-backup"

            # 安全删除非SQLite驱动
            find "$QT_PLUGINS_DIR/sqldrivers" \
              -name "libqsql*.so" \
              ! -name "*sqlite*" \
              ! -name "*SQLite*" \
              -delete

            # 最终验证
            echo "当前SQL驱动:"
            ls -l "$QT_PLUGINS_DIR/sqldrivers"
            echo "SQLite驱动状态:"
            ldd "$QT_PLUGINS_DIR/sqldrivers/libqsqlite.so" || true
          
      # 打包
      - name: package
        run: |
         cp res/icon.png bin/release/icon.png
         cp res/default.desktop bin/release/default.desktop
         cp ExtBin/linux/AppRun bin/release/AppRun
         chmod +x bin/release/AppRun
                  
         #cp -r ExtBin/linux/resources bin/release/resources

         #cp ExtBin/linux/libfcitx5platforminputcontextplugin.so /home/runner/work/Knot/Qt/QT_VERSION/gcc_64/gcc_64/plugins/platforminputcontexts/libfcitx5platforminputcontextplugin.so
         #chmod 755 /home/runner/work/Knot/Qt/QT_VERSION/gcc_64/plugins/platforminputcontexts/libfcitx5platforminputcontextplugin.so

         #cp ExtBin/linux/libFcitx5Qt6DBusAddons.so.5.1.9 /home/runner/work/Knot/Qt/QT_VERSION/gcc_64/plugins/platforminputcontexts/libFcitx5Qt6DBusAddons.so.5.1.9
         #chmod 755 /home/runner/work/Knot/Qt/QT_VERSION/gcc_64/plugins/platforminputcontexts/libFcitx5Qt6DBusAddons.so.5.1.9


         #mkdir -p bin/release/plugins/platforminputcontexts/
         #cp -R ExtBin/linux/fcitx5/* bin/release/plugins/platforminputcontexts/
         #chmod -R 755 bin/release/plugins/platforminputcontexts/

         #cd bin/release/plugins/platforminputcontexts
         #ln -sf libFcitx5Qt6DBusAddons.so.5.1.9 libFcitx5Qt6DBusAddons.so.1
         # 进入目标目录，执行操作，完成后自动回到当前目录
         #(cd bin/release/plugins/platforminputcontexts && \
         # ln -sf libFcitx5Qt6DBusAddons.so.5.1.9 libFcitx5Qt6DBusAddons.so.1 && \
         # ln -sf libFcitx5Qt6DBusAddons.so.5.1.9 libFcitx5Qt6DBusAddons.so.5)

         #cp ExtBin/linux/libfcitx5platforminputcontextplugin.so bin/release/plugins/platforminputcontexts/libfcitx5platforminputcontextplugin.so
         #chmod 755 bin/release/plugins/platforminputcontexts/libfcitx5platforminputcontextplugin.so

         #cp ExtBin/linux/libFcitx5Qt6DBusAddons.so.5.1.9 bin/release/plugins/platforminputcontexts/libFcitx5Qt6DBusAddons.so.5.1.9
         #chmod 755 bin/release/plugins/platforminputcontexts/libFcitx5Qt6DBusAddons.so.5.1.9


         # 获取 Qt6 插件目录
          #QT6_PLUGINS_DIR="${{ env.Qt6_DIR }}/../../plugins/platforminputcontexts"
          QT6_PLUGINS_DIR="/home/runner/work/Knot/Qt/$QT_VERSION/gcc_64/plugins/platforminputcontexts"

         # 检查插件文件是否存在
         #if [ ! -f "ExtBin/libfcitx5platforminputcontextplugin.so" ]; then
         #echo "Error: Plugin file not found in ExtBin/"
         #exit 1
         #fi

         # 拷贝并设置权限
         mkdir -p "$QT6_PLUGINS_DIR"
         cp ExtBin/linux/fcitx5/* "$QT6_PLUGINS_DIR/"
         chmod 755 "$QT6_PLUGINS_DIR/"

         (cd "$QT6_PLUGINS_DIR/" && \
         ln -sf libFcitx5Qt6DBusAddons.so.5.1.9 libFcitx5Qt6DBusAddons.so.1 && \
         ln -sf libFcitx5Qt6DBusAddons.so.1 libFcitx5Qt6DBusAddons.so)

         echo "Copied to: $QT6_PLUGINS_DIR"
         ls -l "$QT6_PLUGINS_DIR"

         mkdir bin/release/lib/
         cp -r ExtBin/linux/nss/* bin/release/lib/

         #cp ExtBin/linux/openssl3/* bin/release/lib/
         cp -P /usr/lib/x86_64-linux-gnu/libssl.so.3* bin/release/lib/

         # 复制fcitx5插件到应用自身的plugins目录（关键！）
         APP_PLUGINS_DIR="bin/release/plugins/platforminputcontexts"
         mkdir -p "$APP_PLUGINS_DIR"
         cp ExtBin/linux/fcitx5/* "$APP_PLUGINS_DIR/"  # 从ExtBin复制插件

         # 修复插件的符号链接
         (cd "$APP_PLUGINS_DIR" && \
         ln -sf libFcitx5Qt6DBusAddons.so.5.1.9 libFcitx5Qt6DBusAddons.so.1 && \
         ln -sf libFcitx5Qt6DBusAddons.so.1 libFcitx5Qt6DBusAddons.so)

         # 在运行 linuxdeployqt 前，将 Qt 插件目录添加到库搜索路径
         export LD_LIBRARY_PATH="/home/runner/work/Knot/$Qt/QT_VERSION/gcc_64/plugins/platforminputcontexts:$LD_LIBRARY_PATH"

         export VERSION # linuxdeployqt uses this for naming the file
         ./linuxdeployqt-continuous-x86_64.AppImage bin/release/${targetName} \
                  -unsupported-allow-new-glibc \
                  -qmldir=/home/runner/work/Knot/Knot/src/qmlsrc \
                  -qmake=/home/runner/work/Knot/Qt/6.6.3/gcc_64/bin/qmake \
                  -appimage \
                  -extra-plugins=platforminputcontexts
                  #-plugin-dir=/home/runner/work/Knot/Qt/6.6.3/gcc_64/plugins/platforminputcontexts
         #chmod +x ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage

      # 上传artifacts          
      - uses: actions/upload-artifact@v4
        with:
          
          name: ${{ env.orgName }}-${{ env.VERSION }}-x86_64.AppImage
          path: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          
          #name: ${{ env.orgName }}-${{ matrix.os }}-${{ matrix.qt_ver }}-${{ env.VERSION }}-x86_64.AppImage
          #path: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          
     # tag 上传Release
      - name: uploadRelease
        #if: startsWith(github.event.ref, 'refs/tags/')
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          
          file: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          asset_name: ${{ env.orgName }}-${{ env.VERSION }}-x86_64.AppImage
          
          #file: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          #asset_name: ${{ env.orgName }}-${{ matrix.os }}-${{ matrix.qt_ver }}-${{ env.VERSION }}-x86_64.AppImage
          
          tag: ${{ github.ref }}
          overwrite: true     
          
          
    
