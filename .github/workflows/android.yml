name: Build Android APK

on:
  push:
    branches: [ main ]
    paths:
      - '**'
      - '!stats.txt'
      - '!README.md'
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 6.6.3  # 使用最新稳定版本
  ANDROID_API_LEVEL: 34
  BUILD_TOOLS_VERSION: 34.0.0
  NDK_VERSION: 26.1.10909125  # 匹配最新NDK
  QT_ARCH: android_arm64_v8a
  REPO_ROOT: ${{ github.workspace }}
  QT_INSTALL_DIR: /usr/local/Qt  # 使用插件默认路径

jobs:
  build:
    runs-on: ubuntu-latest  # 切换到Ubuntu（更适合Android编译）

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'gradle'

    - name: Setup Android SDK and NDK
      uses: android-actions/setup-android@v3
      id: android-setup
      with:
        ndk-version: ${{ env.NDK_VERSION }}
        sdk-version: ${{ env.ANDROID_API_LEVEL }}

    - name: Install Qt for Android
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ env.QT_VERSION }}
        target: android
        arch: ${{ env.QT_ARCH }}
        modules: qtcharts qtsensors qtlocation qtpositioning qtwebview
        # 添加安装路径重映射
        archive-folder-restructure: "yes"
        install-deps: true
        mirror: https://mirrors.tuna.tsinghua.edu.cn/qt/  # 使用国内镜像加速

    - name: Debug Qt Installation
      run: |
        # 列出所有可能的安装路径
        echo "Qt根目录内容:"
        ls -la ${{ env.QT_INSTALL_DIR }}

        echo "尝试不同版本格式:"
        ls -la ${{ env.QT_INSTALL_DIR }}/${{ env.QT_VERSION }} || true
        ls -la ${{ env.QT_INSTALL_DIR }}/${{ env.QT_VERSION_DIR }} || true

        echo "查找实际安装位置:"
        find ${{ env.QT_INSTALL_DIR }} -name 'android_arm64_v8a' -type d

        echo "验证qmake位置:"
        find ${{ env.QT_INSTALL_DIR }} -name qmake -type f

    - name: Configure Qt environment
      id: set-qt-env
      run: |
        # 自动检测 Android 目录
        QT_ANDROID_DIR=$(find ${{ env.QT_INSTALL_DIR }} -path "*/${{ env.QT_ARCH }}" -type d -print -quit)
        if [ -z "$QT_ANDROID_DIR" ]; then
            echo "::error::Android Qt目录未找到!"
            exit 1
        fi

        # 输出环境变量供后续步骤使用
        echo "QT_ANDROID_DIR=${QT_ANDROID_DIR}" >> $GITHUB_ENV
        echo "PATH=${QT_ANDROID_DIR}/bin:$PATH" >> $GITHUB_ENV
        echo "检测到的Qt路径: ${QT_ANDROID_DIR}"

    - name: Verify Qt and NDK
      run: |
        echo "Qt版本:"
        qmake --version
        echo "NDK路径:"
        echo $ANDROID_NDK_ROOT
        echo "NDK工具链测试:"
        $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/clang --version

    - name: Generate Makefile
      run: |
        cd $REPO_ROOT
        ${{ env.QT_ANDROID_DIR }}/bin/qmake "Knot.pro" \
                -spec android-clang \
                "CONFIG += thread c++17 release" \
                "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT" \
                "ANDROID_API_LEVEL=${{ env.ANDROID_API_LEVEL }}" \
                ANDROID_ABIS=arm64-v8a

    - name: Build APK
      run: |
        make -j$(nproc)
        make apk

    - name: Sign APK
      run: |
        jarsigner -verbose \
          -sigalg SHA256withRSA \
          -digestalg SHA-256 \
          -keystore android/app/my-release-key.keystore \
          -storepass ${{ secrets.KEY_STORE_PASSWORD }} \
          -keypass ${{ secrets.KEY_PASSWORD }} \
          build/android-build-release-unsigned.apk \
          ${{ secrets.KEY_ALIAS }}

        $ANDROID_SDK_ROOT/build-tools/${{ env.BUILD_TOOLS_VERSION }}/zipalign -v 4 \
          build/android-build-release-unsigned.apk \
          Knot6-release.apk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Android-APK
        path: Knot6-release.apk
