name: Qt6 Android CI (Fixed)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  QT_VERSION: "6.6.3"
  QT_ARCH: "android_arm64_v8a"
  NDK_VERSION: "26.1.10909125"
  ANDROID_API_LEVEL: "34"
  JAVA_VERSION: "17"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          path: 'src'

      # 1. 安装 JDK
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      # 2. 安装 NDK
      - name: Install NDK
        run: |
          $ndkUrl = "https://dl.google.com/android/repository/android-ndk-r26b-windows.zip"
          Invoke-WebRequest -Uri $ndkUrl -OutFile "ndk.zip"
          Expand-Archive -Path "ndk.zip" -DestinationPath "android-sdk\ndk"
          Rename-Item "android-sdk\ndk\android-ndk-r26b" "android-sdk\ndk\$env:NDK_VERSION"
          echo "ANDROID_NDK_ROOT=$env:GITHUB_WORKSPACE\android-sdk\ndk\$env:NDK_VERSION" >> $env:GITHUB_ENV
          echo "$env:ANDROID_NDK_ROOT\prebuilt\windows-x86_64\bin" >> $env:GITHUB_PATH

      # 3. 安装 Qt
      - name: Install Qt
        run: |
          python -m pip install aqtinstall
          aqt install-qt windows android $env:QT_VERSION $env:QT_ARCH -m qt5compat --outputdir "$env:GITHUB_WORKSPACE\Qt"

      # 4. 验证安装
      - name: Verify Installation
        run: |
          echo "=== Qt 安装验证 ==="
          $qtBin = "$env:GITHUB_WORKSPACE\Qt\$env:QT_VERSION\$env:QT_ARCH\bin"
          dir "$qtBin" | findstr "qmake"

          if (!(Test-Path "$qtBin\qmake.exe")) {
              echo "::error::qmake.exe 未找到!"
              exit 1
          }

      # 5. 构建项目
      - name: Build
        shell: cmd
        run: |
          echo "=== 当前工作目录 ==="
          cd
          dir

          echo "=== 设置环境 ==="
          set QT_ROOT=%GITHUB_WORKSPACE%\Qt\%QT_VERSION%\%QT_ARCH%
          set PATH=%QT_ROOT%\bin;%PATH%

          echo "=== 查找 qmake ==="
          where qmake

          echo "=== 执行 qmake ==="
          qmake Knot.pro -spec android-clang CONFIG+=release ANDROID_ABIS=arm64-v8a

          echo "=== 检查 Makefile ==="
          if not exist Makefile (
              echo "::error::Makefile 未生成!"
              dir
              exit 1
          )

          echo "=== 开始编译 ==="
          make -j %NUMBER_OF_PROCESSORS%

          echo "=== 打包 APK ==="
          make apk INSTALL_ROOT=build

      # 6. 上传产物
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Knot-APK
          path: build\android-build\build\outputs\apk\release\*.apk
