name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 6.6.3
  ANDROID_API_LEVEL: 34
  BUILD_TOOLS_VERSION: 34.0.0
  NDK_VERSION: 25.1.8937393
  QT_DESKTOP_ARCH: gcc_64  # 桌面工具链架构
  QT_ARCH: android_arm64_v8a 

jobs:
  build:
    #os: [ubuntu-22.04]
    runs-on: windows-latest #ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
          path: .  # 直接检出到工作目录根路径（D:\a\Knot6）
          fetch-depth: 0  # 完整克隆历史记录

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Android components
      shell: cmd  # 强制使用 CMD 而非 PowerShell
      run: |
        @echo off
        echo Accepting licenses...
        echo y | sdkmanager --licenses
        sdkmanager "platforms;android-%ANDROID_API_LEVEL%" ^
        "build-tools;%BUILD_TOOLS_VERSION%" ^
        "ndk;%NDK_VERSION%" ^
        "cmdline-tools;latest"

    # 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # 安装 aqtinstall 并配置 PATH
    - name: Install aqtinstall
      run: |
        pip install aqtinstall
        echo "$HOME/.local/bin" >> $GITHUB_PATH  # 关键：确保后续步骤能找到 aqt

     # 使用 aqtinstall 安装 Qt
    - name: Install Qt for Desktop
      shell: cmd  # 强制使用 CMD 解释器
      run: |
        aqt list-qt windows desktop --modules 6.6.3 win64_msvc2019_64

         aqt install-qt ^
           windows ^
           desktop ^
           %QT_VERSION% ^
           win64_msvc2019_64 ^
           --outputdir "C:\Qt" ^
           --modules qtcharts qtsensors qtlocation qtpositioning qt5compat


    # 安装Qt安卓模块
    - name: Install Qt Android
      shell: cmd  # 强制使用 CMD 解释器
      run: |

        aqt list-qt windows android --arch 6.6.3

        aqt install-qt ^
            windows ^
            android ^
            %QT_VERSION% ^
            android_arm64_v8a ^
            --outputdir "C:\Qt" ^
            --modules qtcharts qtsensors qtlocation qtpositioning qt5compat
        
    - name: Setup Android environment variables
      shell: powershell  # 保持与编译步骤相同的shell类型
      run: |
          # 直接写入绝对路径避免变量拼接错误
          echo "QT_DIR=C:\Qt\6.6.3\android_arm64_v8a" >> $env:GITHUB_ENV
          echo "PATH=$env:QT_DIR\bin;$env:PATH" >> $env:GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$env:ANDROID_SDK_ROOT\ndk\$env:NDK_VERSION" >> $env:GITHUB_ENV

    #- name: Prepare signing
    #  run: |
    #    mkdir -p android/app
    #    echo "${{ secrets.SIGNING_KEY }}" > android/app/my-release-key.keystore.base64
    #    base64 -d android/app/my-release-key.keystore.base64 > android/app/my-release-key.keystore


    - name: Build APK
      shell: cmd  # 改为CMD解释器
      run: |
          :: Step 1 - 生成Makefile
          cd "D:\a\Knot6\Knot6"
          dir
          C:\Qt\6.6.3\android_arm64_v8a\bin\qmake.bat "D:\a\Knot6\Knot6\Knot.pro"

          #"C:\Qt\6.6.3\android_arm64_v8a\bin\qmake.bat" "Knot.pro" ^
          #  -spec android-clang ^
          #  CONFIG+=release ^
          #  ANDROID_ABIS=arm64-v8a ^
          #  ANDROID_NDK_ROOT=C:\Android\android-sdk\ndk\25.1.8937393

          :: Step 2 - 多线程编译
          #"C:\Qt\Tools\jom\jom.exe" -j4 || "C:\Qt\Tools\mingw1120_64\bin\mingw32-make.exe" -j4

          :: Step 3 - 生成APK
          #"C:\Qt\Tools\mingw1120_64\bin\mingw32-make.exe" apk

    - name: Sign APK
      run: |
        jarsigner -verbose \
          -sigalg SHA256withRSA \
          -digestalg SHA-256 \
          -keystore android/app/my-release-key.keystore \
          -storepass ${{ secrets.KEY_STORE_PASSWORD }} \
          -keypass ${{ secrets.KEY_PASSWORD }} \
          build/android-build/build/outputs/apk/release/android-build-release-unsigned.apk \
          ${{ secrets.KEY_ALIAS }}

        $ANDROID_SDK_ROOT/build-tools/${{ env.BUILD_TOOLS_VERSION }}/zipalign -v 4 \
          build/android-build/build/outputs/apk/release/android-build-release-unsigned.apk \
          MyApp-release.apk

    - name: Upload artifact
      uses: actions/upload-artifact@v4  # 更新到v4版本
      with:
        name: Android-APK
        path: MyApp-release.apk
