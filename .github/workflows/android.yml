name: Build Android APK

on:
  push:
    branches: [ main ]
    paths:
      - '**'
      - '!stats.txt'  # 排除根目录下的 stats.txt
      - '!README.md'

  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 6.6.3
  ANDROID_API_LEVEL: 34
  BUILD_TOOLS_VERSION: 34.0.0
  NDK_VERSION: 26.1.10909125
  QT_ARCH: android_arm64_v8a
  REPO_ROOT: ${{ github.workspace }}  # 使用 GitHub Actions 提供的工作区路径

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Setup Android SDK and NDK
      uses: android-actions/setup-android@v3
      id: android-setup
      with:
        ndk-version: ${{ env.NDK_VERSION }}
        sdk-version: ${{ env.ANDROID_API_LEVEL }}

    - name: Install Qt Android
      uses: jurplel/install-qt-action@v3
      id: qt-android
      with:
        version: ${{ env.QT_VERSION }}
        target: android
        arch: ${{ env.QT_ARCH }}
        modules: qtcharts qtsensors qtlocation qtpositioning qt5compat
        install-deps: true  # 确保安装所有依赖

    - name: Setup Paths
      shell: cmd
      run: |
        echo ANDROID_NDK_ROOT=${{ steps.android-setup.outputs.ndk-path }} >> %GITHUB_ENV%
        echo NDK_MAKE=%ANDROID_NDK_ROOT%\prebuilt\windows-x86_64\bin\make.exe >> %GITHUB_ENV%
        echo Qt6_DIR=${{ steps.qt-android.outputs.Qt6_DIR }} >> %GITHUB_ENV%
        echo QT_PLUGIN_PATH=${{ steps.qt-android.outputs.Qt6_DIR }}\plugins >> %GITHUB_ENV%
        echo QML2_IMPORT_PATH=${{ steps.qt-android.outputs.Qt6_DIR }}\qml >> %GITHUB_ENV%
        echo PATH=${{ steps.qt-android.outputs.Qt6_DIR }}\bin;%PATH% >> %GITHUB_ENV%  # 将Qt路径放在最前面

    - name: Verify Qt Installation
      shell: cmd
      run: |
        echo "验证Qt安装:"
        echo "Qt6_DIR: %Qt6_DIR%"
        echo "PATH: %PATH%"

        echo "检查qmake位置:"
        where qmake.exe || echo "qmake未找到!"

        echo "检查Qt目录内容:"
        if exist "%Qt6_DIR%\bin" (
          echo "%Qt6_DIR%\bin 目录存在"
          dir "%Qt6_DIR%\bin"
        ) else (
          echo "%Qt6_DIR%\bin 目录不存在!"
        )

        echo "尝试执行qmake:"
        if exist "%Qt6_DIR%\bin\qmake.exe" (
          "%Qt6_DIR%\bin\qmake.exe" --version
        ) else (
          echo "qmake.exe不存在!"
        )

    - name: Generate Makefile
      shell: cmd
      run: |
        cd /d %REPO_ROOT%

        if not exist "Knot.pro" (
          echo ##[error]Knot.pro 文件未找到！
          dir /b *.pro
          exit 1
        )

        qmake "Knot.pro" ^
              -spec android-clang ^
              "CONFIG += thread c++17 release" ^
              "ANDROID_NDK_ROOT=%ANDROID_NDK_ROOT%" ^
              ANDROID_ABIS=arm64-v8a

    - name: Build APK
      shell: cmd
      run: |
        "%NDK_MAKE%" -j8
        "%NDK_MAKE%" apk

    - name: Sign APK
      shell: cmd
      run: |
        jarsigner -verbose ^
          -sigalg SHA256withRSA ^
          -digestalg SHA-256 ^
          -keystore android/app/my-release-key.keystore ^
          -storepass ${{ secrets.KEY_STORE_PASSWORD }} ^
          -keypass ${{ secrets.KEY_PASSWORD }} ^
          build\android-build-release-unsigned.apk ^
          ${{ secrets.KEY_ALIAS }}

        "%ANDROID_SDK_ROOT%\build-tools\%BUILD_TOOLS_VERSION%\zipalign" -v 4 ^
          build\android-build-release-unsigned.apk ^
          Knot6-release.apk

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Android-APK
        path: Knot6-release.apk
