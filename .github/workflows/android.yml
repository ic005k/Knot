name: Qt6 Android CI (Universal)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  QT_VERSION: "6.6.3"
  NDK_VERSION: "26.1.10909125"  # NDK r26b
  ANDROID_API_LEVEL: "34"
  JAVA_VERSION: "17"            # 匹配 Qt 6.6 要求的 JDK 17

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # 1. 安装 JDK 17 (必须匹配 Qt 6.6 要求)
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      # 2. 安装 Android NDK (精确版本)
      - name: Install NDK
        run: |
          $ndkUrl = "https://dl.google.com/android/repository/android-ndk-r26b-windows.zip"
          Invoke-WebRequest -Uri $ndkUrl -OutFile "ndk.zip"
          Expand-Archive -Path "ndk.zip" -DestinationPath "$env:GITHUB_WORKSPACE\android-sdk\ndk"
          Rename-Item "$env:GITHUB_WORKSPACE\android-sdk\ndk\android-ndk-r26b" "$env:GITHUB_WORKSPACE\android-sdk\ndk\$env:NDK_VERSION"
          echo "ANDROID_NDK_ROOT=$env:GITHUB_WORKSPACE\android-sdk\ndk\$env:NDK_VERSION" >> $env:GITHUB_ENV
          echo "$env:ANDROID_NDK_ROOT\prebuilt\windows-x86_64\bin" >> $env:GITHUB_PATH

      # 3. 安装 Qt 和必要模块
      - name: Install Qt
        run: |
          python -m pip install aqtinstall
          # 列出可用模块确认名称
          aqt list-qt windows android --modules ${{ env.QT_VERSION }}
          # 安装Qt主程序 + 常用Android模块
          aqt install-qt windows android ${{ env.QT_VERSION }} --archives all
          # 额外安装qt5compat（如果名称不同需调整）
          aqt install-tool windows android tools_qt5compat

      # 4. 配置环境变量
      - name: Setup Environment
        run: |
          # 查找Qt安装路径
          $qtPath = (Get-ChildItem "C:\Qt" -Filter "${{ env.QT_VERSION }}" -Recurse -Directory | Where-Object { $_.FullName -match "android" } | Select-Object -First 1).FullName
          echo "QT_PATH=$qtPath" >> $env:GITHUB_ENV
          echo "$qtPath\bin" >> $env:GITHUB_PATH

          # 生成 gradle.properties 解决兼容性警告
          echo "android.suppressUnsupportedCompileSdk=${{ env.ANDROID_API_LEVEL }}" > gradle.properties

      # 5. 验证工具链
      - name: Verify Tools
        run: |
          qmake --version
          make --version
          java --version

      # 6. 构建项目
      - name: Build
        shell: cmd
        env:
          ANDROID_NDK_ROOT: ${{ github.workspace }}\android-sdk\ndk\${{ env.NDK_VERSION }}
          ANDROID_SDK_ROOT: ${{ github.workspace }}\android-sdk
        run: |
          qmake Knot.pro -spec android-clang CONFIG+=release ANDROID_ABIS=arm64-v8a
          make -j %NUMBER_OF_PROCESSORS%
          make apk INSTALL_ROOT=build

      # 7. 上传APK产物
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Knot-APK
          path: |
            build\android-build\build\outputs\apk\release\*.apk
            build\android-build\build\outputs\apk\debug\*.apk
