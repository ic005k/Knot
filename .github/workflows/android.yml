name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 6.6.3
  ANDROID_API_LEVEL: 34
  BUILD_TOOLS_VERSION: 34.0.0
  NDK_VERSION: 25.1.8937393
  QT_DESKTOP_ARCH: win64_mingw
  QT_ARCH: android_arm64_v8a

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Setup Android SDK and NDK
      uses: android-actions/setup-android@v3
      id: android-setup
      with:
        ndk-version: ${{ env.NDK_VERSION }}
        sdk-version: ${{ env.ANDROID_API_LEVEL }}

    - name: Set Android Environment Variables
      shell: cmd
      run: |
          :: 使用短路径格式设置
          for /f "usebackq tokens=*" %%i in (`cygpath -w -s "${{ steps.android-setup.outputs.ndk-path }}"`) do set NDK_SHORT=%%i
          echo ANDROID_NDK_ROOT=%NDK_SHORT% >> %GITHUB_ENV%

          for /f "usebackq tokens=*" %%i in (`cygpath -w -s "${{ steps.android-setup.outputs.sdk-path }}"`) do set SDK_SHORT=%%i
          echo ANDROID_SDK_ROOT=%SDK_SHORT% >> %GITHUB_ENV%
          echo ANDROID_HOME=%SDK_SHORT% >> %GITHUB_ENV%

    - name: Install Qt Desktop
      uses: jurplel/install-qt-action@v3
      id: qt-desktop
      with:
        version: ${{ env.QT_VERSION }}
        target: desktop
        arch: ${{ env.QT_DESKTOP_ARCH }}
        modules: qtcharts qtsensors qtlocation qtpositioning qt5compat

    - name: Install Qt Android
      uses: jurplel/install-qt-action@v3
      id: qt-android
      with:
        version: ${{ env.QT_VERSION }}
        target: android
        arch: ${{ env.QT_ARCH }}
        modules: qtcharts qtsensors qtlocation qtpositioning qt5compat
        install-dir: ${{ github.workspace }}/Qt

    - name: Setup Toolchain Paths
      shell: cmd
      run: |
        echo ${{ steps.qt-desktop.outputs.install-dir }}/Tools/mingw1120_64/bin >> %GITHUB_PATH%
        echo ${{ steps.qt-android.outputs.install-dir }}/bin >> %GITHUB_PATH%
        echo ${{ steps.qt-desktop.outputs.install-dir }}/Tools/jom >> %GITHUB_PATH%

    - name: Validate Paths
      shell: cmd
      run: |
          :: 使用短路径格式解决超长问题
          set QT_DIR=${{ steps.qt-android.outputs.install-dir }}
          echo Qt安装路径: %QT_DIR%

          :: 转换为8.3短路径格式
          for /f "usebackq tokens=*" %%i in (`cygpath -w -s "%QT_DIR%"`) do set QT_SHORT=%%i
          dir "%QT_SHORT%\mkspecs\android-clang"

          :: 检查NDK路径
          set NDK_ROOT=%ANDROID_NDK_ROOT%
          echo NDK路径: %NDK_ROOT%
          dir "%NDK_ROOT%"

    - name: Build APK
      shell: cmd
      run: |
          :: 使用短路径变量
          set QT_DIR=${{ steps.qt-android.outputs.install-dir }}
          for /f "usebackq tokens=*" %%i in (`cygpath -w -s "%QT_DIR%"`) do set QT_SHORT=%%i

          qmake.bat Knot.pro ^
            -spec "%QT_SHORT%\mkspecs\android-clang" ^
            "ANDROID_NDK_ROOT=%ANDROID_NDK_ROOT%" ^
            CONFIG+=release ^
            ANDROID_ABIS=arm64-v8a

          jom -j4 || make -j4
          make apk ANDROID_APK_DIR=%CD%\build


    - name: Sign APK
      shell: cmd
      run: |
        :: 使用绝对路径避免混淆
        jarsigner -verbose ^
          -sigalg SHA256withRSA ^
          -digestalg SHA-256 ^
          -keystore android/app/my-release-key.keystore ^
          -storepass ${{ secrets.KEY_STORE_PASSWORD }} ^
          -keypass ${{ secrets.KEY_PASSWORD }} ^
          build\android-build-release-unsigned.apk ^
          ${{ secrets.KEY_ALIAS }}

        :: 使用 zipalign 优化 APK
        "%ANDROID_SDK_ROOT%\build-tools\%BUILD_TOOLS_VERSION%\zipalign" -v 4 ^
          build\android-build-release-unsigned.apk ^
          Knot6-release.apk

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Android-APK
        path: Knot6-release.apk
