name: Build Android APK

on:
  push:
    branches: [ main ]
    paths:
      - '**'
      - '!stats.txt'
      - '!README.md'
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 6.5.3  # 确认存在的稳定版本
  ANDROID_API_LEVEL: 34
  BUILD_TOOLS_VERSION: 34.0.0
  NDK_VERSION: 26.1.10909125
  QT_ARCH: android_arm64_v8a
  REPO_ROOT: ${{ github.workspace }}
  QT_INSTALL_DIR: ${{ github.workspace }}\QtAndroid  # Windows路径格式

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Setup Android SDK and NDK
      uses: android-actions/setup-android@v3
      id: android-setup
      with:
        ndk-version: ${{ env.NDK_VERSION }}
        sdk-version: ${{ env.ANDROID_API_LEVEL }}

    - name: 手动创建Qt安装目录（避免权限问题）
      shell: cmd
      run: |
        if not exist "${{ env.QT_INSTALL_DIR }}" (
          mkdir "${{ env.QT_INSTALL_DIR }}"
          echo "已创建Qt安装目录: ${{ env.QT_INSTALL_DIR }}"
        ) else (
          echo "Qt安装目录已存在"
        )

    - name: Install Qt Android（强制指定镜像源）
      uses: jurplel/install-qt-action@v4
      id: qt-android
      with:
        version: ${{ env.QT_VERSION }}
        target: android
        arch: ${{ env.QT_ARCH }}
        modules: qtcharts qtsensors qtlocation qtpositioning
        install-dir: ${{ env.QT_INSTALL_DIR }}
        install-deps: true
        logging: true
        # 强制使用国内镜像（解决官方源下载失败问题）
        mirror: https://mirrors.tuna.tsinghua.edu.cn/qt/

    - name: 验证Qt安装目录是否存在
      shell: cmd
      run: |
        echo "Qt指定安装目录: ${{ env.QT_INSTALL_DIR }}"
        if exist "${{ env.QT_INSTALL_DIR }}" (
          echo "Qt安装目录存在，列出内容："
          dir "${{ env.QT_INSTALL_DIR }}"
        ) else (
          echo "##[error]Qt安装目录不存在！安装失败！"
          echo "请查看Install Qt Android步骤的详细日志，确认是否有404或下载失败"
          exit 1
        )

    - name: 手动设置Qt路径（修复cmd注释语法）
      shell: cmd
      run: |
        rem 手动拼接路径（使用反斜杠，注意：cmd中用rem注释，不能用#）
        set QT_ROOT=${{ env.QT_INSTALL_DIR }}\${{ env.QT_VERSION }}\${{ env.QT_ARCH }}
        echo QT_ROOT=%QT_ROOT% >> %GITHUB_ENV%
        echo Qt6_DIR=%QT_ROOT% >> %GITHUB_ENV%
        echo QT_PLUGIN_PATH=%QT_ROOT%\plugins >> %GITHUB_ENV%
        echo QML2_IMPORT_PATH=%QT_ROOT%\qml >> %GITHUB_ENV%
        echo PATH=%QT_ROOT%\bin;%PATH% >> %GITHUB_ENV%

    - name: 再次验证Qt安装
      shell: cmd
      run: |
        echo "当前Qt根目录: %QT_ROOT%"
        echo "PATH: %PATH%"

        echo "检查bin目录是否存在："
        if exist "%QT_ROOT%\bin" (
          echo "bin目录存在，列出文件："
          dir "%QT_ROOT%\bin"
        ) else (
          echo "##[error]Qt的bin目录不存在！安装失败！"
          exit 1
        )

        echo "检查qmake是否存在："
        if exist "%QT_ROOT%\bin\qmake.exe" (
          echo "qmake存在，版本信息："
          "%QT_ROOT%\bin\qmake.exe" --version
        ) else (
          echo "##[error]qmake.exe不存在！"
          exit 1
        )

    # 后续步骤保持不变...
    - name: Generate Makefile
      shell: cmd
      run: |
        cd /d %REPO_ROOT%

        if not exist "Knot.pro" (
          echo ##[error]Knot.pro 文件未找到！
          dir /b *.pro
          exit 1
        )

        qmake "Knot.pro" ^
              -spec android-clang ^
              "CONFIG += thread c++17 release" ^
              "ANDROID_NDK_ROOT=%ANDROID_NDK_ROOT%" ^
              ANDROID_ABIS=arm64-v8a

    - name: Build APK
      shell: cmd
      run: |
        "%NDK_MAKE%" -j8
        "%NDK_MAKE%" apk

    - name: Sign APK
      shell: cmd
      run: |
        jarsigner -verbose ^
          -sigalg SHA256withRSA ^
          -digestalg SHA-256 ^
          -keystore android/app/my-release-key.keystore ^
          -storepass ${{ secrets.KEY_STORE_PASSWORD }} ^
          -keypass ${{ secrets.KEY_PASSWORD }} ^
          build\android-build-release-unsigned.apk ^
          ${{ secrets.KEY_ALIAS }}

        "%ANDROID_SDK_ROOT%\build-tools\%BUILD_TOOLS_VERSION%\zipalign" -v 4 ^
          build\android-build-release-unsigned.apk ^
          Knot6-release.apk

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Android-APK
        path: Knot6-release.apk
