name: Qt6 Android CI (Windows Optimized)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      QT_VERSION: "6.6.3"
      NDK_VERSION: "26.1.10909125"
      ANDROID_API_LEVEL: "34"

    steps:
      - uses: actions/checkout@v4

      # 1. 安装NDK（精确版本）
      - name: Install NDK
        run: |
          $ndkUrl = "https://dl.google.com/android/repository/android-ndk-r26b-windows.zip"
          Invoke-WebRequest -Uri $ndkUrl -OutFile "ndk.zip"
          Expand-Archive -Path "ndk.zip" -DestinationPath "$env:GITHUB_WORKSPACE\android-sdk\ndk"
          Rename-Item "$env:GITHUB_WORKSPACE\android-sdk\ndk\android-ndk-r26b" "$env:GITHUB_WORKSPACE\android-sdk\ndk\$env:NDK_VERSION"
          echo "ANDROID_NDK_ROOT=$env:GITHUB_WORKSPACE\android-sdk\ndk\$env:NDK_VERSION" >> $env:GITHUB_ENV

      # 2. 安装Qt（包含jom工具）
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        id: qt_install
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: android
          arch: ${{ env.QT_ARCH }}
          modules: qt5compat
          setup-python: false
          aqtinstall_args: "--tools ifw jom"  # 关键修改：强制安装jom

      # 3. 配置环境路径（包含jom路径）
      - name: Setup Environment
        run: |
          # 设置Qt路径
          echo "${{ steps.qt_install.outputs.qt_path }}\bin" >> $env:GITHUB_PATH

          # 设置jom路径（通常在Qt Tools目录）
          echo "C:\Qt\Tools\jom" >> $env:GITHUB_PATH
          echo "QT_DIR=${{ steps.qt_install.outputs.qt_path }}" >> $env:GITHUB_ENV

          # 验证工具可用性
          where qmake
          where jom

      # 4. 验证环境
      - name: Verify Environment
        run: |
          qmake --version
          jom --version
          ls "$env:ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/aarch64-linux-android"

      # 5. 构建项目（使用nmake作为备用方案）
      - name: Build
        shell: cmd
        run: |
          qmake Knot.pro -spec android-clang CONFIG+=release ANDROID_ABIS=arm64-v8a

          # 尝试使用jom，失败时自动回退到nmake
          jom -j %NUMBER_OF_PROCESSORS% || (
            echo "::warning::jom not found, falling back to nmake"
            nmake
            nmake apk INSTALL_ROOT=build
          ) && (
            jom apk INSTALL_ROOT=build
          )

      # 6. 上传产物
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Knot-APK
          path: build\android-build\build\outputs\apk\release\*.apk
