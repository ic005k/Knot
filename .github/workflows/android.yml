name: Build and Sign Android APK

on:
  push:
    branches: [ main ]
    paths:
      - '**'
      - '!stats.txt'
      - '!README.md'
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: "6.6.3"
  QT_ARCH: "android_arm64_v8a"
  ANDROID_API_LEVEL: "34"
  NDK_VERSION: "26.3.11579264"
  BUILD_TOOLS_VERSION: "34.0.0"
  ANDROID_SDK_ROOT: "/usr/local/lib/android/sdk"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 安装基础依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev unzip

      # 设置 Java 环境
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # 安装 Android 环境
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          sdk-version: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.BUILD_TOOLS_VERSION }}

      # 安装 Qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          target: android
          arch: ${{ env.QT_ARCH }}
          modules: qt5compat qtcharts qtsensors qtlocation qtpositioning qtwebview
          install-deps: true

      # 配置环境变量
      - name: Setup environment
        run: |
          echo "ANDROID_NDK_ROOT=${{ env.ANDROID_SDK_ROOT }}/ndk/${{ env.NDK_VERSION }}" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${{ env.ANDROID_SDK_ROOT }}" >> $GITHUB_ENV

          QT_DIR=$(find /opt/qt -name "android_arm64_v8a" -type d | head -n 1)
          [ -z "$QT_DIR" ] && QT_DIR=$(find /home/runner -name "android_arm64_v8a" -type d | head -n 1)
          echo "QT_DIR=$QT_DIR" >> $GITHUB_ENV
          echo "$QT_DIR/bin" >> $GITHUB_PATH

      # 构建 APK
      - name: Build APK
        run: |
          qmake Knot.pro -spec android-clang CONFIG+=release
          make -j$(nproc)
          make apk INSTALL_ROOT=build

      # 签名准备
      - name: Prepare signing
        run: |
          mkdir -p signing
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > signing/app.keystore
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" > signing/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> signing/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> signing/keystore.properties
          echo "storeFile=../app.keystore" >> signing/keystore.properties

      # APK 签名
      - name: Sign APK
        run: |
          cd signing
          jarsigner -verbose \
            -sigalg SHA256withRSA \
            -digestalg SHA-256 \
            -keystore app.keystore \
            -storepass "${{ secrets.KEY_STORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_PASSWORD }}" \
            ../build/android-build/build/outputs/apk/release/android-build-release-unsigned.apk \
            "${{ secrets.KEY_ALIAS }}"

          $ANDROID_SDK_ROOT/build-tools/$BUILD_TOOLS_VERSION/zipalign -v 4 \
            ../build/android-build/build/outputs/apk/release/android-build-release-unsigned.apk \
            ../app-release.apk

      # 上传产物
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Signed-APK
          path: app-release.apk
          if-no-files-found: error
