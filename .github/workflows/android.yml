name: Qt6 Android CI (Path Fixed)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  QT_VERSION: "6.6.3"
  QT_ARCH: "android_arm64_v8a"
  NDK_VERSION: "26.1.10909125"
  ANDROID_API_LEVEL: "34"
  JAVA_VERSION: "17"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          path: 'src'  # 强制统一代码目录

      # 1. 安装工具链
      - name: Setup Environment
        shell: powershell
        run: |
          # 安装JDK
          & actions\setup-java@v3 --distribution zulu --java-version $env:JAVA_VERSION

          # 安装NDK
          $ndkUrl = "https://dl.google.com/android/repository/android-ndk-r26b-windows.zip"
          Invoke-WebRequest -Uri $ndkUrl -OutFile "ndk.zip"
          Expand-Archive -Path "ndk.zip" -DestinationPath "android-sdk\ndk"
          Rename-Item "android-sdk\ndk\android-ndk-r26b" "android-sdk\ndk\$env:NDK_VERSION"
          echo "ANDROID_NDK_ROOT=$pwd\android-sdk\ndk\$env:NDK_VERSION" >> $env:GITHUB_ENV
          echo "$pwd\android-sdk\ndk\$env:NDK_VERSION\prebuilt\windows-x86_64\bin" >> $env:GITHUB_PATH

          # 安装Qt（使用绝对路径工作目录）
          python -m pip install aqtinstall
          aqt install-qt windows android $env:QT_VERSION $env:QT_ARCH -m qt5compat --outputdir "$pwd\Qt"

      # 2. 路径验证
      - name: Verify Paths
        shell: powershell
        run: |
          $qtBin = "$pwd\Qt\$env:QT_VERSION\$env:QT_ARCH\bin"

          # 物理验证文件系统
          echo "=== 物理路径验证 ==="
          dir "$qtBin" -Force
          (Get-ChildItem "$qtBin\qmake*").FullName
          [System.IO.File]::Exists("$qtBin\qmake.exe")

          # 环境验证
          echo "=== 环境验证 ==="
          where.exe qmake
          Get-Command qmake | Select-Object -Property Path, Source

      # 3. 构建项目
      - name: Build
        shell: powershell
        run: |
          # 切换到项目目录
          Set-Location "$pwd\src"

          # 使用完整物理路径调用qmake
          $qmakePath = "$env:GITHUB_WORKSPACE\Qt\$env:QT_VERSION\$env:QT_ARCH\bin\qmake"
          & "$qmakePath" Knot.pro -spec android-clang CONFIG+=release ANDROID_ABIS=arm64-v8a 2>&1 | Tee-Object -FilePath qmake.log

          # 验证Makefile编码
          [System.IO.File]::ReadAllText("Makefile", [System.Text.Encoding]::UTF8).Substring(0, 200)

          # 构建
          make -j $env:NUMBER_OF_PROCESSORS
          make apk INSTALL_ROOT=build

      # 4. 上传结果
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-Output
          path: |
            src\build\android-build\build\outputs\apk\**\*.apk
            src\qmake.log
